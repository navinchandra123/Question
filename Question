///////////Greedy///////////


1. https://practice.geeksforgeeks.org/problems/n-meetings-in-one-room/0(activity selection)



#include<bits/stdc++.h>
using namespace std;
#define inf 100000000000000000
#define ll long long int
#define pb push_back
#define f first
#define s second
#define mod 1000000007
#define fast ios_base::sync_with_stdio(false),cin.tie(NULL),cout.tie(NULL)
void mahakal(){
	#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	freopen("error.txt","w",stderr);
	#endif
}
struct navin{
	ll x;
	ll y , idx;
};

bool cmp(navin s1 , navin s2){
	return s1.y<s2.y;
}

int main(){
	// mahakal();
	fast;

	ll t;
	cin>>t;
	while(t--){
		ll n;
		cin>>n;
		navin vec[n+1];
		for(ll i=0;i<n;i++){
			cin>>vec[i].x;
		}
		for(ll i=0;i<n;i++){
			cin>>vec[i].y;
			vec[i].idx=(i+1);
		}
		sort(vec,vec+n,cmp);
		ll cnt=1;
		ll ps=vec[0].y;
		cout<<vec[0].idx<<" ";
		for(ll i=1;i<n;i++){
			if(vec[i].x>ps){
				cnt++;
				ps=vec[i].y;
				cout<<vec[i].idx<<" ";
			}
			// cerr<<vec[i].f<<" "<<vec[i].s<<endl;
		}
		cout<<endl;
		// cout<<cnt<<endl;
	}

	return 0;
}



2. https://practice.geeksforgeeks.org/problems/job-sequencing-problem/0(Job sequence Problem)

#include<bits/stdc++.h>
using namespace std;
#define inf 100000000000000000
#define ll long long int
#define pb push_back
#define f first
#define s second
#define mod 1000000007
#define fast ios_base::sync_with_stdio(false),cin.tie(NULL),cout.tie(NULL)
void mahakal(){
	#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	freopen("error.txt","w",stderr);
	#endif
}

struct navin{
	ll id,dead,prof;
};

bool cmp(navin s1 , navin s2){
	return s1.prof>s2.prof;
}

int main(){
	// mahakal();
	fast;

	ll t;
	cin>>t;
	while(t--){
		ll n;
		cin>>n;
		navin arr[n];
		for(ll i=0;i<n;i++){
			cin>>arr[i].id>>arr[i].dead>>arr[i].prof;
		}
		sort(arr , arr+n , cmp );
		bool slot[n+1];
		for(ll i=0;i<=n;i++)slot[i]=false;
		
		ll cnt=0,ans=0;

		for(ll i=0;i<n;i++){
			for(ll j=min(n,arr[i].dead)-1;j>=0 ;j--){
				if(slot[j]==false){
					ans+=arr[i].prof;
					slot[j]=1;
					cnt++;
					break;
				}
			}
		}
		cout<<cnt<<" "<<ans<<endl;
	}

	return 0;
}



3. Job Sequencing Problem – Loss Minimization (https://www.geeksforgeeks.org/job-sequencing-problem-loss-minimization/)


#include<bits/stdc++.h>
using namespace std;
#define inf 100000000000000000
#define ll long long int
#define pb push_back
#define f first
#define s second
#define mod 1000000007
#define fast ios_base::sync_with_stdio(false),cin.tie(NULL),cout.tie(NULL)
void mahakal(){
	#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	freopen("error.txt","w",stderr);
	#endif
}

bool cmp(pair<ll,pair<ll,ll>> p1 , pair<ll,pair<ll,ll>> p2){
	return p1.f*p2.s.f>p2.f*p1.s.f;
}

int main(){
	mahakal();fast;

	ll t;
	cin>>t;
	while(t--){
		ll n ;
		cin>>n;
		vector<pair<ll,pair<ll,ll>>> vec(n);
		for(ll i=0;i<n;i++){
			cin>>vec[i].f;
		}
		for(ll i=0;i<n;i++){
			cin>>vec[i].s.f;
			vec[i].s.s=(i+1);
		}
		stable_sort(vec.begin(),vec.end(),cmp);
		for(ll i=0;i<n;i++){
			cout<<vec[i].s.s<<" ";
		}
		cout<<endl;
	}

	return 0;
}

4. Job Selection Problem – Loss Minimization Strategy | Set 2(https://www.geeksforgeeks.org/job-selection-problem-loss-minimization-strategy-set-2/)


#include<bits/stdc++.h>
using namespace std;
#define inf 100000000000000000
#define ll long long int
// #define long double long double 
#define pb push_back
#define f first
#define s second
#define mod 1000000007
#define fast ios_base::sync_with_stdio(false),cin.tie(NULL),cout.tie(NULL)
void mahakal(){
	#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	freopen("error.txt","w",stderr);
	#endif
}

int main(){
	mahakal();fast;

	ll t;
	cin>>t;
	while(t--){
		ll n;
		cin>>n;
		vector<ll>vec;
		vec.pb(0);
		priority_queue<ll , vector<ll> , greater<ll>> pq;
		for(ll i=0 , a ; i<n ;i++){
			cin>>a;
			pq.push(a);
		}
		while(pq.size()){
			ll x= pq.top();
			pq.pop();
			cout<<x<<" ";
			vec.pb(x);
		}
		long double ans=0;
		long double p;
		cin>>p;
		p=p/100;
		for(ll i=n;i>=1 ; i--){
			ans+= vec[i]*pow(1-p,n-i);
			// cerr<<p<<" ";
		}
		cout<<endl;
		cout<<ans<<endl;
	}

	return 0;
}

5. 


